parameters:
  azureSubscription:
  environment:
  terraformStorageAccountName:

jobs:
- job: Deploy
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    # Load artifacts
    - download: current
      artifact: blog
    
    # Apply terraform
    - task: AzureCLI@1
      displayName: Terraform Deploy
      inputs:
        azureSubscription: $(azureSubscription)
        scriptLocation: inlineScript
        workingDirectory: $(System.DefaultWorkingDirectory)/terraform/
        addSpnToEnvironment: true
        inlineScript: |
            # Fail on errors, output every command and result to the log
            set -e -x

            # Set terraform auth variables
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_SUBSCRIPTION_ID=$(az account show --query id | xargs)
            export ARM_TENANT_ID=$(az account show --query tenantId | xargs)

            # Generate SAS Token to storage account
            endDate=`date -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
            sas=`az storage container generate-sas \
                -n '$web' \
                --account-name ${{ parameters.terraformStorageAccountName }} \
                --https-only \
                --permissions dlrw \
                --expiry $end \
                -otsv`

            # Init terraform env
            terraform init \
            -backend-config="access_key=$sas" \
            -backend-config="storage_account_name=${{ parameters['storageAccountName'] }}" \
            -input=false 

            # Generate a Terraform plan
            terraform plan \
            -var environment="${{ parameters.environment }}" \
            -out=${{ parameters.environment }}.tfplan \
            -input=false 

            # Apply Terraform Template
            terraform apply ${{ parameters.environment }}.tfplan

    # Update storage account var
    - script: |
        # Fail on errors, output every command and result to the log
        set -e -x
        echo "##vso[task.setvariable variable=storageAccountName]`terraform output storage_account`"
      displayName: Load details from terraform infrastructure
    
    # AZCopy release
    - task: AzureFileCopy@3
      inputs:
        SourcePath: $(Pipeline.Workspace)/blog
        azureSubscription: ${{ parameters.azureSubscription }}
        Destination: AzureBlob
        storage: $(storageAccountName)
        ContainerName: $web
        displayName: Deploy to blob storage